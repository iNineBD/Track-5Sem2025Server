name: Go Build, Test and SonarCloud Analysis

on:
  push:
    branches: [main, sprint-1, sprint-2, sprint-3]
  pull_request:
    branches: [main, sprint-1, sprint-2, sprint-3]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23

      - name: Cache Go Modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: go-mod-${{ hashFiles('src/go.sum') }}
          restore-keys: go-mod-

      - name: Clean Go Cache
        run: go clean -cache -modcache -testcache -x

      - name: Install Dependencies
        working-directory: src
        run: |
          go mod tidy
          go mod download

      - name: Format Go Code
        working-directory: src
        run: go fmt $(go list ./... | grep -v /vendor/)

      - name: Run tests with coverage
        working-directory: src
        run: go test ./... -coverprofile=coverage.out -covermode=atomic

      - name: Save coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: src/coverage.out

      - name: Build application
        working-directory: src
        run: go build -v ./...

  sonarqube-analysis:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: build-and-test  # S칩 roda se a job 'build-and-test' for bem-sucedida

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Necess치rio para o SonarQube analisar corretamente o hist칩rico do c칩digo

      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: src

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectBaseDir=src
            -Dsonar.go.coverage.reportPaths=coverage.out
