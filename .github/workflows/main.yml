name: Build, Test and SonarCloud Analysis

on:
  pull_request:
    branches:
      - main
      - sprint-1
      - sprint-2
      - sprint-3

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.1'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('src/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download Go dependencies
        working-directory: src
        run: |
          if [ ! -f go.sum ]; then
            go mod tidy
          fi
          go mod download

      - name: Create .env file
        working-directory: src
        run: |
          echo "DB_USER=${{ secrets.DB_USER }}" > ../.env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> ../.env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> ../.env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> ../.env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> ../.env
          echo "DB_SCHEMA=${{ secrets.DB_SCHEMA }}" >> ../.env

      - name: Create .env file in service
        working-directory: src/pkg/service
        run: |
          echo "DB_USER=${{ secrets.DB_USER }}" > .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_SCHEMA=${{ secrets.DB_SCHEMA }}" >> .env

      - name: Verify .env file (debug)
        working-directory: src
        run: |
          ls -la ../
          cat ../.env

      - name: Run tests with coverage and generate reports
        working-directory: src
        run: |
          EXCLUDE_DIRS="dto models docs"
          PACKAGES=$(go list ./... | grep -Ev "$(echo $EXCLUDE_DIRS | sed 's/ /|/g')")

          go test $PACKAGES \
            -coverprofile=coverage.out \
            -covermode=atomic \
            -coverpkg=./... \
            -tags=integration \
            -vet=off

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: src/coverage.out

      - name: Build application
        working-directory: src
        run: go build -v ./...

  sonarcloud-analysis:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.1'

      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: src/

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}