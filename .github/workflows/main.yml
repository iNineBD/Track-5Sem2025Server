name: Go Build, Test and SonarCloud Analysis

on:
  push:
    branches: [main, sprint-1, sprint-2, sprint-3]
  pull_request:
    branches: [main, sprint-1, sprint-2, sprint-3]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22
          cache: true

    # Baixa a versão do golangci-lint diretamente no path e adiciona em $GITHUB_PATH para garantir diponibilidade do binário.
      - name: Install GolangCI-Lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.55.2
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Prepare Go Modules
        working-directory: src
        run: |
          go mod tidy 

      - name: Lint and Format Code
        working-directory: src
        run: |
          go fmt ./...
          golangci-lint run --fix ./...
  
      - name: Run tests with coverage
        working-directory: src
        run: go test ./... -coverprofile=coverage.out -covermode=atomic
  
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: src/coverage.out
  
      - name: Build application
        working-directory: src
        run: go build -v ./...
      
  sonarqube-analysis:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: build-and-test  # Só roda se a job 'build-and-test' for bem-sucedida

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Necessário para o SonarQube analisar corretamente o histórico do código

      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: src

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectBaseDir=src
            -Dsonar.go.coverage.reportPaths=coverage.out
