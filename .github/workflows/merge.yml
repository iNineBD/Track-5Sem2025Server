name: Build, Test and SonarCloud on Merge to Main (Go)

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  build-and-analyze:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.1'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download Go dependencies
        working-directory: src
        run: |
          if [ ! -f go.sum ]; then
            go mod tidy
          fi
          go mod download

      - name: Run tests with coverage and generate reports
        working-directory: src
        run: |
          EXCLUDE_DIRS="dto models docs"
          PACKAGES=$(go list ./... | grep -Ev "$(echo $EXCLUDE_DIRS | sed 's/ /|/g')")
          go test $PACKAGES \
            -coverprofile=coverage.out \
            -covermode=atomic \
            -coverpkg=./... \
            -tags=integration \
            -vet=off

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: src/coverage.out

  sonarcloud-analysis:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: build-and-analyze

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.1'

      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: src

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=iNineBD_Track-5Sem2025Server
            -Dsonar.organization=ininetrack
            -Dsonar.projectName=Track-5Sem2025Server
            -Dsonar.projectVersion=1.0
            -Dsonar.sources=src
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.exclusions=**/*_test.go,**/models/**,**/dto/**,**/docs/**
            -Dsonar.coverage.exclusions=**/*_test.go,**/models/**,**/dto/**,**/docs/**
            -Dsonar.go.coverage.reportPaths=src/coverage.out
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.branch.name=main
            -Dsonar.verbose=true

  sonarqube-selfhosted:
    name: SonarQube Self-hosted Analysis
    runs-on: ubuntu-latest
    needs: build-and-analyze
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: src

      - name: Set up Java 17 for SonarScanner
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Cache SonarScanner CLI
        id: cache-scanner
        uses: actions/cache@v4
        with:
          path: sonar-scanner
          key: sonar-scanner-5.0.1

      - name: Download SonarScanner CLI (if cache miss)
        if: steps.cache-scanner.outputs.cache-hit != 'true'
        run: |
          wget -q https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip -q sonar-scanner-cli-5.0.1.3006-linux.zip
          mv sonar-scanner-5.0.1.3006-linux sonar-scanner

      - name: Run SonarQube Scanner (CLI)
        env:
          SONAR_TOKEN: ${{ secrets.SONAR2_TOKEN }}
        run: |
          ./sonar-scanner/bin/sonar-scanner \
            -Dsonar.projectKey=Track-5Sem2025Server \
            -Dsonar.projectName=Track-5Sem2025Server \
            -Dsonar.projectVersion=1.0 \
            -Dsonar.projectBaseDir=. \
            -Dsonar.sources=src \
            -Dsonar.sourceEncoding=UTF-8 \
            -Dsonar.go.coverage.reportPaths=src/coverage.out \
            -Dsonar.exclusions=**/*_test.go,**/models/**,**/dto/**,**/docs/** \
            -Dsonar.coverage.exclusions=**/*_test.go,**/models/**,**/dto/**,**/docs/** \
            -Dsonar.host.url=http://144.22.212.19:9001 \
            -Dsonar.login=$SONAR_TOKEN \
            -Dsonar.verbose=true